name: Docker CI/CD

on:
  push:
    branches:
      - main
      - canary
      - ci-cd
    pull_request:

env:
  REGISTRY_ROOT: ghcr.io/${{ github.repository }}
  REPO_NAME: api
  
jobs:
  build-test-image:
    name: Building test image
    runs-on: ubuntu-latest

    permissions:
      packages: write # needed to push docker image to ghcr.io

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push image for unit testing
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ env.REGISTRY_ROOT }}/${{ github.run_id }}-testing
          target: testing
          cache-from: type=gha
          cache-to: type=gha,mode=max
      
  unit-testing:
    name: Unit testing
    runs-on: ubuntu-latest
    needs: [build-test-image]

    permissions:
      packages: read # needed to pull docker image from ghcr.io

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Unit testing
        run: |
          docker run --rm ${{ env.REGISTRY_ROOT }}/${{ github.run_id }}-testing npm run test

  remove-testing-image:
    name: Removing testing image
    runs-on: ubuntu-latest
    needs: [unit-testing]

    permissions:
      packages: write
    
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        
      - name: Pruning package
        uses: actions/delete-package-versions@v3
        with:
          package-name: ${{ env.REPO_NAME }}/${{ github.run_id }}-testing
          min-versions-to-keep: 0

  build-final-image:
    name: Building production image
    runs-on: ubuntu-latest
    needs: [unit-testing]

    permissions:
      packages: write # needed to push docker image to ghcr.io
      pull-requests: write # needed to create and update comments in PRs

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Applying metadata to image
        id: docker_meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY_ROOT }} # ghcr.io/ae-utbm/api
          flavor: |
            latest=false
          tags: |
            type=raw,value=latest-main,enable=${{ endsWith(github.ref, 'main')}}
            type=raw,value=latest-dev,enable=${{ endsWith(github.ref, 'canary')}}
            type=raw,value={{sha}}-main,enable=${{ endsWith(github.ref, 'main')}}
            type=raw,value={{sha}}-dev,enable=${{ endsWith(github.ref, 'canary')}}

      - name: Building final image
        uses: docker/build-push-action@v3
        with:
          push: ${{ github.event_name != 'pull_request'}}
          tags: ${{ steps.docker_meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

        # If PR, put image tags in the PR comments
        # from https://github.com/marketplace/actions/create-or-update-comment
      - name: Find comment for image tags
        uses: peter-evans/find-comment@v1
        if: github.event_name == 'pull_request'
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: 'github-actions[bot]'
          body-includes: Docker image tag(s) pushed
      
        # If PR, put image tags in the PR comments
      - name: Create or update comment for image tags
        uses: peter-evans/create-or-update-comment@v2
        if: github.event_name == 'pull_request'
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            Docker image tag(s) pushed:
            ```text
            ${{ steps.docker_meta.outputs.tags }}
            ```
          edit-mode: replace